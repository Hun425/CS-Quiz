plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

bootJar { enabled = true }

dependencies {
    // 모듈 의존성
    implementation project(':core')
    implementation project(':modules:security')
    implementation project(':modules:user')
    implementation project(':modules:quiz')
    implementation project(':modules:tag')
    implementation project(':modules:battle')
    implementation project(':modules:search')
    
    // Spring Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    
    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    
    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    
    // Database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'
    
    // 문서화
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    
    // 모니터링 및 관리
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // 테스트
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

// 테스트 설정
test {
    useJUnitPlatform()
}

// QueryDSL 설정
def querydslDir = "src/main/generated"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean {
    delete file(querydslDir)
}