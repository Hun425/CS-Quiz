plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'idea'
}

group = 'com.quizplatform'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

// IDEA 설정 추가
idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/java/main")
        testOutputDir = file("$buildDir/classes/java/test")
    }
}

// 모든 프로젝트에 적용될 설정
allprojects {
    apply plugin: 'idea'
    
    repositories {
        mavenCentral()
    }
}

// 서브 프로젝트/모듈에 적용될 설정
subprojects {
    // 각 모듈이 Java 라이브러리일 경우
    if (name != 'infra') { // infra 모듈 제외
        apply plugin: 'java-library'
        apply plugin: 'org.springframework.boot'
        apply plugin: 'io.spring.dependency-management'
        
        // 소스셋 설정을 IDE에도 반영
        idea {
            module {
                // 2가지 패키지 구조 모두 인식
                sourceDirs += file(".")
            }
        }
    }
}

// 루트 프로젝트에서는 bootJar 비활성화
bootJar {
    enabled = false
}

// 일반 JAR 활성화
jar {
    enabled = true
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.1")
    set('springdocVersion', "2.5.0")
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    
    // Database
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    
    // Swagger/OpenAPI
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"
    
    // Resilience4j
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    // Add project dependencies for the new modules
    implementation project(':modules:common')
    implementation project(':modules:quiz')
    implementation project(':modules:battle')
    implementation project(':modules:user')
    // Remove or comment out core if it's no longer needed as a direct dependency
    // implementation project(':core')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

test {
    useJUnitPlatform()
}
