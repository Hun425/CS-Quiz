plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.quizplatform'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// 메인 프로젝트에서는 bootJar 비활성화 (모듈에서만 실행)
bootJar {
    enabled = false
}

jar {
    enabled = true
}

ext {
    set('springCloudVersion', "2023.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    
    group = 'com.quizplatform'
    version = '0.0.1-SNAPSHOT'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    
    // 기본적으로 모든 서브프로젝트의 bootJar 비활성화
    bootJar {
        enabled = false
    }
    
    jar {
        enabled = true
    }
    
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
    
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.kafka:spring-kafka'
        
        // Swagger UI (Version updated for Spring Boot 3.2.x compatibility)
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
        
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.kafka:spring-kafka-test'
    }
    
    test {
        useJUnitPlatform()
    }
}

// 실행 가능한 모듈들만 bootJar 활성화
project(':modules:user') {
    bootJar {
        enabled = true
        mainClass = 'com.quizplatform.user.UserApplication'
    }
    
    dependencies {
        implementation project(':modules:common')
        
//        implementation 'org.springframework.boot:spring-boot-starter-security'
//        implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//        runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
//        runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    }
}

project(':modules:quiz') {
    bootJar {
        enabled = true
        mainClass.set('com.quizplatform.quiz.QuizApplication')
    }
    
    dependencies {
        implementation project(':modules:common')
        
        implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
        annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    }
}

project(':modules:battle') {
    bootJar {
        enabled = true
        mainClass.set('com.quizplatform.battle.BattleApplication')
    }
    
    dependencies {
        implementation project(':modules:common')
        
        implementation 'org.springframework.boot:spring-boot-starter-websocket'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    }
}

project(':modules:api-gateway') {
    bootJar {
        enabled = true
        mainClass.set('com.quizplatform.apigateway.ApiGatewayApplication')
    }
    
    dependencies {
        implementation project(':modules:common')
        
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        
        // Swagger/OpenAPI 설정
        implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'
        implementation 'org.webjars:swagger-ui:5.11.8'
        implementation 'org.webjars:webjars-locator-core:0.55'
        
        // Circuit Breaker - 직접 버전 지정
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j:3.0.0'
        
        // Rate Limiting과 Redis 의존성 제외
        configurations {
            all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-data-redis-reactive'
            all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-web'
        }
    }
}

project(':modules:eureka-server') {
    bootJar {
        enabled = true
        mainClass.set('com.quizplatform.eureka.EurekaServerApplication')
    }
    
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
//        implementation 'org.springframework.boot:spring-boot-starter-security'
    }
}

project(':modules:config-server') {
    bootJar {
        enabled = true
        mainClass.set('com.quizplatform.configserver.ConfigServerApplication')
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-config-server'
    }
}

dependencies {
    implementation project(':modules:common')
    implementation project(':modules:user')
    implementation project(':modules:quiz')
    implementation project(':modules:battle')
    implementation project(':modules:api-gateway')
    implementation project(':modules:eureka-server')
    implementation project(':modules:config-server')
    
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.kafka:spring-kafka'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
