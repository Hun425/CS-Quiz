server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /

spring:
  application:
    name: user-service
  
  # 데이터베이스 설정
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/quizplatform?currentSchema=user_schema}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  
  # JPA 설정  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: user_schema
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  
  # Kafka 설정
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: user-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.quizplatform.*
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Eureka 클라이언트 설정
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761/eureka/}
  instance:
    instance-id: ${spring.application.name}:${random.uuid}

# 로깅 설정
logging:
  level:
    com.quizplatform: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.springframework.kafka: INFO 