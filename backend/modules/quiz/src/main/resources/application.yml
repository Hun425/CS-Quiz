server:
  port: 8082

spring:
  application:
    name: quiz-service
    
  # Swagger/OpenAPI 설정
  springdoc:
    api-docs:
      path: /api-docs
    swagger-ui:
      path: /swagger-ui.html
      tags-sorter: alpha
      operations-sorter: alpha
    default-consumes-media-type: application/json
    default-produces-media-type: application/json
  
  # 데이터베이스 설정
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/quiz_platform}
    username: ${SPRING_DATASOURCE_USERNAME:quizuser}
    password: ${SPRING_DATASOURCE_PASSWORD:quizpass}
    driver-class-name: org.postgresql.Driver
  
  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  
  # Elasticsearch 설정
  elasticsearch:
    rest:
      uris: ${SPRING_ELASTICSEARCH_REST_URIS:http://localhost:9200}
  
  # Kafka 설정
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: quiz-service
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

# Eureka 클라이언트 설정
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true

# 로깅 설정
logging:
  level:
    root: INFO
    com.quizplatform: DEBUG
    org.hibernate.SQL: DEBUG

# JWT 설정
jwt:
  secret: ${JWT_SECRET:quizplatform_default_secret_key_change_in_production}
  expiration: ${JWT_EXPIRATION:86400000} # 24시간 (milliseconds)
  refreshExpiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7일 (milliseconds)

management:
  endpoints:
    web:
      exposure:
        include: health,info