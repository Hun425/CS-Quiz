server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
    
  # 데이터소스 자동 구성 비활성화
  autoconfigure:
    exclude: 
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  
  # OAuth2 설정 제거
  
  # Redis 설정 완전 비활성화
  data:
    redis:
      enabled: false
  
  # Swagger/OpenAPI 설정
  springdoc:
    api-docs:
      enabled: true
      path: /v3/api-docs
    swagger-ui:
      enabled: true
      path: /swagger-ui.html
      configUrl: /v3/api-docs/swagger-config
      urls:
        - url: /v3/api-docs/gateway
          name: API Gateway
        - url: /v3/api-docs/users
          name: User Service 
        - url: /v3/api-docs/quizzes
          name: Quiz Service
        - url: /v3/api-docs/battles
          name: Battle Service
      use-root-path: true
      urls-primary-name: API Gateway # 기본으로 표시될 API 문서
    # API 그룹 기본 포함 여부 설정 (false로 설정하여 선택적으로 표시)
    group-configs:
      - group: gateway
        paths-to-match: /api/gateway/**
      - group: auth
        paths-to-match: /api/auth/** 
      - group: users
        paths-to-match: /api/users/**
      - group: quizzes
        paths-to-match: /api/quizzes/**
      - group: battles
        paths-to-match: /api/battles/**
    show-actuator: false
    cache:
      disabled: true
    
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes:
        # 마이크로서비스 API 라우팅
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/users/(?<path>.*), /$\{path}
            
        - id: quiz-service
          uri: lb://quiz-service
          predicates:
            - Path=/api/quizzes/**
          filters:
            - RewritePath=/api/quizzes/(?<path>.*), /$\{path}
            
        - id: battle-service
          uri: lb://battle-service
          predicates:
            - Path=/api/battles/**
          filters:
            - RewritePath=/api/battles/(?<path>.*), /$\{path}
            
        # Swagger 문서 라우팅
        - id: user-openapi
          uri: lb://user-service
          predicates:
            - Path=/v3/api-docs/users/**
          filters:
            - RewritePath=/v3/api-docs/users/(?<path>.*), /v3/api-docs/$\{path}
            - RewritePath=/v3/api-docs/users$, /v3/api-docs

        - id: quiz-openapi
          uri: lb://quiz-service
          predicates:
            - Path=/v3/api-docs/quizzes/**
          filters:
            - RewritePath=/v3/api-docs/quizzes/(?<path>.*), /v3/api-docs/$\{path}
            - RewritePath=/v3/api-docs/quizzes$, /v3/api-docs

        - id: battle-openapi
          uri: lb://battle-service
          predicates:
            - Path=/v3/api-docs/battles/**
          filters:
            - RewritePath=/v3/api-docs/battles/(?<path>.*), /v3/api-docs/$\{path}
            - RewritePath=/v3/api-docs/battles$, /v3/api-docs

        # API Gateway 자체 OpenAPI 문서
        - id: gateway-openapi
          uri: forward:/v3/api-docs
          predicates:
            - Path=/v3/api-docs/gateway
          filters:
            - SetPath=/v3/api-docs
        
        # Swagger UI 리소스 라우팅
        - id: openapi-swagger-ui
          uri: forward:/swagger-ui
          predicates:
            - Path=/swagger-ui/**
          filters:
            - name: PreserveHostHeader
            
        - id: openapi-api-docs
          uri: forward:/v3/api-docs
          predicates:
            - Path=/v3/api-docs
          filters:
            - SetPath=/v3/api-docs
            - name: PreserveHostHeader
            
            
        - id: swagger-webjars
          uri: forward:/webjars
          predicates:
            - Path=/webjars/**
          filters:
            - name: PreserveHostHeader
      
      # 서비스 발견 관련 설정
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          
      # 레이트 리미팅 설정 비활성화
      default-filters: []
            
  # Kafka 설정
  kafka:
    bootstrap-servers: localhost:9092
    
# JWT 설정
jwt:
  secret: changeme-please-change-this-key-for-production-use-longer-key
  access-token-validity: 3600      # 1시간 (초 단위)
  refresh-token-validity: 604800   # 7일 (초 단위)
    
# Eureka 클라이언트 설정
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    
# 로깅 설정
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.netty: DEBUG
    
# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
