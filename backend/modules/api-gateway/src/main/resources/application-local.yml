server:
  port: 8080

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
    urls:
      - name: user-service
        url: http://localhost:8081/v3/api-docs
      - name: quiz-service
        url: http://localhost:8082/v3/api-docs
      - name: battle-service
        url: http://localhost:8083/v3/api-docs


spring:
  application:
    name: api-gateway
  
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
    
  # 데이터소스 자동 구성 비활성화
  autoconfigure:
    exclude: 
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  
  # Redis 설정 완전 비활성화
  data:
    redis:
      enabled: false
  
  # Swagger/OpenAPI 설정 (진짜 자동 설정)

  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes:
        # 마이크로서비스 API 라우팅
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/users/(?<path>.*), /$\{path}
            
        - id: quiz-service
          uri: lb://quiz-service
          predicates:
            - Path=/api/quizzes/**
          filters:
            - RewritePath=/api/quizzes/(?<path>.*), /$\{path}
            
        - id: battle-service
          uri: lb://battle-service
          predicates:
            - Path=/api/battles/**
          filters:
            - RewritePath=/api/battles/(?<path>.*), /$\{path}
            
      
      # 서비스 발견 관련 설정 (자동 설정)
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          
      # 레이트 리미팅 설정 비활성화
      default-filters: []
            
  # Kafka 설정 (로컬)
  kafka:
    bootstrap-servers: localhost:9092
    
# JWT 설정
jwt:
  secret: changeme-please-change-this-key-for-production-use-longer-key
  access-token-validity: 3600      # 1시간 (초 단위)
  refresh-token-validity: 604800   # 7일 (초 단위)

# OAuth2 설정
oauth2:
  google:
    client-id: ${GOOGLE_CLIENT_ID:your-google-client-id}
    client-secret: ${GOOGLE_CLIENT_SECRET:your-google-client-secret}
    redirect-uri: ${GOOGLE_REDIRECT_URI:http://localhost:3000/auth/callback/google}
  github:
    client-id: ${GITHUB_CLIENT_ID:your-github-client-id}
    client-secret: ${GITHUB_CLIENT_SECRET:your-github-client-secret}
    redirect-uri: ${GITHUB_REDIRECT_URI:http://localhost:3000/auth/callback/github}
  kakao:
    client-id: ${KAKAO_CLIENT_ID:your-kakao-client-id}
    client-secret: ${KAKAO_CLIENT_SECRET:your-kakao-client-secret}
    redirect-uri: ${KAKAO_REDIRECT_URI:http://localhost:3000/auth/callback/kakao}
    
# Eureka 클라이언트 설정
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    
# 로깅 설정
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    com.quizplatform: DEBUG
    
# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always