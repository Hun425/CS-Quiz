server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  main:
    web-application-type: reactive
    
  # 데이터소스 자동 구성 비활성화
  autoconfigure:
    exclude: 
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  
  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      client-name: ${spring.application.name}
      connect-timeout: 5s
  
  # Swagger/OpenAPI 설정
  springdoc:
    api-docs:
      enabled: true
      path: /api-docs
    swagger-ui:
      enabled: true
      path: /swagger-ui.html
    
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/users/(?<path>.*), /$\{path}
            
        - id: quiz-service
          uri: lb://quiz-service
          predicates:
            - Path=/api/quizzes/**
          filters:
            - RewritePath=/api/quizzes/(?<path>.*), /$\{path}
            
        - id: battle-service
          uri: lb://battle-service
          predicates:
            - Path=/api/battles/**
          filters:
            - RewritePath=/api/battles/(?<path>.*), /$\{path}
            
        # Swagger API 문서 접근을 위한 경로
        - id: openapi-user
          uri: lb://user-service
          predicates:
            - Path=/api-docs/users/**
          filters:
            - RewritePath=/api-docs/users/(?<path>.*), /api-docs/$\{path}
            
        - id: swagger-ui-user
          uri: lb://user-service
          predicates:
            - Path=/swagger-ui/users/**
          filters:
            - RewritePath=/swagger-ui/users/(?<path>.*), /swagger-ui/$\{path}
            
        - id: openapi-battle
          uri: lb://battle-service
          predicates:
            - Path=/api-docs/battles/**
          filters:
            - RewritePath=/api-docs/battles/(?<path>.*), /api-docs/$\{path}
            
        - id: swagger-ui-battle
          uri: lb://battle-service
          predicates:
            - Path=/swagger-ui/battles/**
          filters:
            - RewritePath=/swagger-ui/battles/(?<path>.*), /swagger-ui/$\{path}
            
        - id: openapi-quiz
          uri: lb://quiz-service
          predicates:
            - Path=/api-docs/quizzes/**
          filters:
            - RewritePath=/api-docs/quizzes/(?<path>.*), /api-docs/$\{path}
            
        - id: swagger-ui-quiz
          uri: lb://quiz-service
          predicates:
            - Path=/swagger-ui/quizzes/**
          filters:
            - RewritePath=/swagger-ui/quizzes/(?<path>.*), /swagger-ui/$\{path}
            
  # Kafka 설정
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
    
# JWT 설정
jwt:
  secret: ${JWT_SECRET:quizplatform_default_secret_key_change_in_production}
  expiration: ${JWT_EXPIRATION:86400000} # 24시간 (milliseconds)
  refreshExpiration: ${JWT_REFRESH_EXPIRATION:604800000} # 7일 (milliseconds)
    
# Eureka 클라이언트 설정
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE:http://eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    
# 로깅 설정
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: DEBUG
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    org.springframework.security: DEBUG
    reactor.netty: DEBUG
    
# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
