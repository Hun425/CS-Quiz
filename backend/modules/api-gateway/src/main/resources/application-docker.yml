server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
    
  # 데이터소스 자동 구성 비활성화
  autoconfigure:
    exclude: 
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
      - org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration
  
  # Redis 설정 완전 비활성화
  data:
    redis:
      enabled: false
      
  # 간소화된 SpringDoc 설정 -> 자동 설정을 위해 제거 또는 주석 처리
  springdoc:
    api-docs:
      enabled: true # API 문서 생성 자체는 활성화
      path: /v3/api-docs # 기본 API 문서 경로
    swagger-ui:
      enabled: true # Swagger UI 자체는 활성화
      path: /swagger-ui.html # Swagger UI 기본 경로
      config-url: /v3/api-docs/swagger-config # 명시적 구성 URL 설정
      # urls 설정은 SpringdocRouteDefinitionRepository 및 SwaggerGroupConfig에서 동적으로 처리
      display-request-duration: true # 요청 처리 시간 표시
      deep-linking: true # URL 딥링킹 활성화
    cache:
      disabled: true # 캐시 비활성화
    group-configs: [] # 빈으로 등록된 그룹 설정 사용
    
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"
      routes:
        # 마이크로서비스 API 라우팅
        - id: user-service
          uri: lb://user-service
          predicates:
            - Path=/api/users/**
          filters:
            - RewritePath=/api/users/(?<path>.*), /$\{path}
            
        - id: quiz-service
          uri: lb://quiz-service
          predicates:
            - Path=/api/quizzes/**
          filters:
            - RewritePath=/api/quizzes/(?<path>.*), /$\{path}
            
        - id: battle-service
          uri: lb://battle-service
          predicates:
            - Path=/api/battles/**
          filters:
            - RewritePath=/api/battles/(?<path>.*), /$\{path}
            
        # 디버그 엔드포인트 라우팅 (개발 환경 전용)
        - id: debug-endpoints
          uri: forward:/
          predicates:
            - Path=/api/debug/**
          filters:
            - name: PreserveHostHeader
            
        # Swagger 문서 라우팅 - 복원
        - id: user-openapi
          uri: lb://user-service
          predicates:
            - Path=/v3/api-docs/users
          filters:
            - RewritePath=/v3/api-docs/users, /v3/api-docs
          
        - id: quiz-openapi
          uri: lb://quiz-service
          predicates:
            - Path=/v3/api-docs/quizzes
          filters:
            - RewritePath=/v3/api-docs/quizzes, /v3/api-docs
          
        - id: battle-openapi
          uri: lb://battle-service
          predicates:
            - Path=/v3/api-docs/battles
          filters:
            - RewritePath=/v3/api-docs/battles, /v3/api-docs
          
        # API Gateway 자체 OpenAPI 문서 라우팅 - 활성화
        - id: gateway-openapi
          uri: forward:/v3/api-docs # 게이트웨이 내부의 /v3/api-docs 엔드포인트로 포워딩
          predicates:
            - Path=/v3/api-docs/api-gateway

        # Swagger Config Endpoint Routing - 활성화
        - id: swagger-config
          uri: forward:/v3/api-docs/swagger-config # 게이트웨이 내부 엔드포인트로 포워딩
          predicates:
            - Path=/v3/api-docs/swagger-config
          filters:
            - name: PreserveHostHeader

        # Swagger UI Resources Routing - 기본적으로 Spring Boot가 처리하므로 주석 유지
#        - id: swagger-ui-html
#          uri: forward:///swagger-ui.html # 게이트웨이 내부 리소스로 포워딩
#          predicates:
#            - Path=/swagger-ui.html
#          filters:
#            - name: PreserveHostHeader
#
#        - id: swagger-ui-resources
#          uri: forward:///swagger-ui # 게이트웨이 내부 리소스로 포워딩
#          predicates:
#            - Path=/swagger-ui/**
#          filters:
#            - name: PreserveHostHeader
#
#        - id: swagger-webjars
#          uri: forward:///webjars # 게이트웨이 내부 리소스로 포워딩
#          predicates:
#            - Path=/webjars/**
#          filters:
#            - name: PreserveHostHeader

      # 서비스 발견 관련 설정
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          
      # 레이트 리미팅 설정 완전히 비활성화
      default-filters: []
            
  # Kafka 설정
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:29092}
    
# Eureka 클라이언트 설정
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE-URL_DEFAULTZONE:http://eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    
# 로깅 설정
logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.http.server.reactive: INFO
    org.springframework.web.reactive: INFO
    reactor.netty: INFO
    org.springdoc: DEBUG
    com.quizplatform: DEBUG
    com.quizplatform.apigateway.config: DEBUG
    
# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,gateway
  endpoint:
    health:
      show-details: always
