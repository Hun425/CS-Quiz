spring:
  # 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://postgres:5432/quiz_db
    username: quizuser
    password: quizpass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      max-lifetime: 1200000

  # Elasticsearch 설정 비활성화
  elasticsearch:
    enabled: false
    # 기존 설정들은 유지 (enabled 속성 추가)
    uris: http://elasticsearch:9200
    connection-timeout: 5s
    socket-timeout: 3s

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: update  # 검증만 수행
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: Asia/Seoul
        # 배치 처리 설정
        jdbc.batch_size: 50
        order_inserts: true
        order_updates: true
        default_batch_fetch_size: 1000
    open-in-view: false  # OSIV 비활성화

  # Redis 설정
  data:
    redis:
      host: redis
      port: 6379
      timeout: 10000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile

          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user

          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/api/oauth2/callback/{registrationId}"
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            user-name-attribute: sub

# 애플리케이션 설정
app:
  oauth2:
    authorized-redirect-uri: http://ec2-13-125-187-28.ap-northeast-2.compute.amazonaws.com/oauth2/redirect
  base-url: http://ec2-13-125-187-28.ap-northeast-2.compute.amazonaws.com:8080

# 서버 설정
server:
  port: 8080
  forward-headers-strategy: native
  tomcat:
    max-threads: 200
    accept-count: 100
    connection-timeout: 5s

# 로깅 설정
logging:
  level:
    root: INFO
    com.quizplatform: INFO
    org.hibernate.SQL: INFO
    org.springframework.cache: INFO

# JWT 설정
jwt:
  secret: ${JWT_SECRET:AbCdEfGhIjKlMnOpQrStUvWxYz1234567890AbCdEfGhIjKlMnOpQrStUvWxYz}
  access-token-validity: 3600000  # 1시간
  refresh-token-validity: 1209600000  # 2주

# 캐시 설정
cache:
  quiz:
    ttl: 3600  # 1시간
  user:
    ttl: 1800  # 30분

# 모니터링 엔드포인트 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Swagger UI 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    groups-order: DESC
    operationsSorter: method
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs
  show-actuator: false
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  paths-to-match:
    - /api/**